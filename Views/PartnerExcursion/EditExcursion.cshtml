@model GuestService.Models.Partner.EditExcursionContext
@{
    ViewBag.Title = "Edit excursion";
    //TODO выгрузить данный из реальных таблиц + темповые
    //TODO фото из двух таблиц
    //TODO цены старые только удалить, новые добавить сразу в рабочую
    //TODO exdetplain, только добавить(?)

    var types = ",";

    foreach (int type in Model.Types)
    {
        types += (type + ",");
    }

    var descriptions = new Dictionary<string, string>();

    foreach (var descItem in Model.Descriptions)
    {
        descriptions[descItem.Key.ToString()] = descItem.Value;
    }
	
	
    var routes = new Dictionary<string, string>();

    foreach (var routeItem in Model.Routes)
    {
        routes[routeItem.Key.ToString()] = routeItem.Value;
    }


    var cancels = new Dictionary<string, string>();

    foreach (var cancelItem in Model.Cancel)
    {
        cancels[cancelItem.Key.ToString()] = cancelItem.Value;
    }


    var stuffs = new Dictionary<string, string>();

    foreach (var stuffItem in Model.Stuffs)
    {
        stuffs[stuffItem.Key.ToString()] = stuffItem.Value;
    }
}
<style>

  .glyphicon.spinning {
            animation: spin 1s infinite linear;
            -webkit-animation: spin2 1s infinite linear;
  }

   @@keyframes spin {
                from { transform: scale(1) rotate(0deg); }
                to { transform: scale(1) rotate(360deg); }
   }

   @@-webkit-keyframes spin2 {
                from { -webkit-transform: rotate(0deg); }
                to { -webkit-transform: rotate(360deg); }
   }

.btn-group > .btn:hover, .btn-group-vertical > .btn:hover, .btn-group > .btn:focus, .btn-group-vertical > .btn:focus, .btn-group > .btn:active, .btn-group-vertical > .btn:active, .btn-group > .btn.active, .btn-group-vertical > .btn.active {
    z-index: 1;
}


    .dz-error .dz-error-message {

    opacity: 1 !important;
    top: 44px !important;
 
    }

    .dropzone .dz-preview .dz-error-message:after {
        top: 0 !important;
    }

    .orders_table td {
        border: 1px solid #bebebe;
        padding: 5px;
    }

    .orders_table th {
        border: 1px solid #bebebe;
        padding: 5px;
        background: #cecece;
    }

    .exc_form .row {
        padding: 30px;
        margin: 30px;
        background: #dedede;
    }

    .right-lang {
        padding-left: 30px;
    }

        .right-lang input, .right-lang textarea, .right-lang select {
            width: 400px;
        }

    .exc_form .left-lang {
        padding-left: 0px;
        border-right: 1px dotted black;
    }

    .left-lang input, .left-lang textarea, .left-lang select {
        width: 400px;
    }

    .common-lang {
        padding-left: calc(50% - 250px);
    }

        .common-lang input, .common-lang textarea, .common-lang select {
            width: 500px;
        }

    .common-lang-btn {
        padding-left: calc(50% - 150px);
    }

    .common-lang-btn button {
            width: 170px;
        }

    .dropzone.dz-clickable {
        width: 500px;
    }
    .price_row {
        border-bottom: 1px dotted black;
        margin-bottom: 20px;
        padding-bottom: 20px;
    }

    .price_row div{
        margin-bottom:15px
    }
    .parent_remove:nth-of-type(2) {
        display:none
    } 

    .price_row select{
        width: 114px
    }
    .price_row .form-control {
        padding: 5px 0 5px 10px;
    }

    .ind .for_group {
        display:none
    
    }

    .group .for_ind {
        display:none
    }

    	.col-sm-9 {
		width: 75% !important;
	}
        .for_ind .col-sm-6 .form-control {
		width: 404px !important;
	}  
	.procent .for_netto {
        display: none;
    }

    .netto .for_procent {
        display: none;
    }


	</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="~/css/dropzone.css">
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
<script src="~/js/dropzone.js"></script>

<script>

    $(document).ready(

        function () {

            $(".weekdays").change(function (e) {

                var days = '';

                $("input", $(this)).each(
                    function () {
                        days += (0 + $(this).is(':checked'));
                    });

                $(this).next().val(days);

            });

            $('#exc_region').change(
                    function(){
                        if($(this).val()=='2')
                            $('input[name=exc_region_name]').show();
                        else
                            $('input[name=exc_region_name]').val('').hide();
                    }
                );

            $('input[name=opt_lang]').change(function () {
                var new_lang = $('input[name=opt_lang]:checked').val()

                apply_lang(new_lang);
            });

            apply_lang(2);
        }
    );


    var apply_lang = function (new_lang) {

        $('label').each(
                   function () {
                       var new_text = $(this).attr('data-' + new_lang);

                       // console.log(new_text);
                       if (new_text != '')
                           $('span', this).text(new_text);
                   });

        $('option').each(
        function () {
            var new_text = $(this).attr('data-' + new_lang);

            if (new_text != '')
                $(this).text(new_text);
        });

        $(".name_ru,.name_en,.for-lang").hide();

        if (new_lang == 2)
            $("." + new_lang + "for-lang,.name_ru").show();
        else
        {
            $("." + new_lang + "for-lang,.name_en").show();
            $('#exc_en_name_copy').val($('#exc_en_name').val());
        }

    };

    var changeParentClass = function (el) {

        var classname = $(el).find('option:selected').attr('data-parentclass');

        $(el).parents('.price_row').removeClass('ind').removeClass('group').addClass(classname);

    }
	var changeParentCommissionClass = function (el) {

        var classname = $(el).find('option:selected').attr('data-parentclass');

        $(el).parents('.price_row').removeClass('procent').removeClass('netto').addClass(classname);
    }
</script>

<div class="container">
    <div class="bk-main">
        <div class="col-lg-12">
            <h1 class="page-header" style="margin-top: 60px;">Edit excursion</h1>
            @if (GuestService.Settings.IsShowBreadCrumb)
            {
                <ol class="breadcrumb">
					<li><a href="/management/en/partner">Provider area</a></li>
                    <li class="active">@ViewBag.Title</li>
                </ol>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 left-lang" style="padding-left:150px; padding-top:50px">
            Fill this column in English (required)
        </div>
        <div class="col-sm-6" style="padding-left:50px; padding-top:37px">

        <!-- ЯЗЫКИ, КОТОРЫЕ ЕСТЬ В ОПИСАНИИ ---->

            Fill this column with another optional language<br>
            @foreach (var langItem in Model.Languages)
            {
                if (langItem.Key != "1")
                {
                    <label><input @(langItem.Key == "2" ? new HtmlString("checked=\"checked\""): new HtmlString(""))  type="radio" name="opt_lang" value="@langItem.Key"/>&nbsp;@langItem.Value</label>
                }
            }
        </div>
    </div>

    <div class="col-sm-12 exc_form">
        <form id="edit_excursion" method="post" action="">
			<input type="hidden" name="ex_id" value="@Model.ExcursionId">
            <input type="hidden" name="ex_copy_id" value="@Model.CopyExcursionId">
			
            <div class="row">
                <div class="col-sm-6 left-lang">

                    @foreach (var name in Model.Names)
                    {
                        if (name.Key == 1)
                        {
                            <span class="left-lang">
                                <label>
                                    <span>@ExcursionStrings.Get("name_title_" + name.Key)</span>
                                    <input   type="text" id="exc_en_name" class="form-control" name="en_name" value="@name.Value">
                                </label>
                            </span>
                        }
                    }
                </div>
                <div class="col-sm-6 right-lang">

                    @foreach (var name in Model.Names)
                    {
                        if (name.Key == 2)
                        {
                            <span class="name_ru left-lang">
                                <label>
                                    <span>@ExcursionStrings.Get("name_title_" + name.Key)</span>
                                    <input type="text" id="exc_ru_name" class="form-control" name="ru_name" value="@name.Value">
                                </label>
                            </span>
                        }
                    }

                    <span class="name_en right-lang" style="display:none">
                        <label>
                            <span>@ExcursionStrings.Get("name_title_1")</span>
                            <input type="text" disabled id="exc_en_name_copy" class="form-control" name="" value="">
                        </label>
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 common-lang">

                    <label 
                            @foreach (var langItem in Model.Languages)
                            {
                                @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("type_title_" + langItem.Key))))
                            }                          
                           >

                        <span>Excursion type / Тип экскурсии</span>
                        <select class="form-control" name="exc_type">
                           
                            <option value="3"
                                    
                                     @if (types.Contains(",3,")){

                                      @(" selected ")
                                  }

                                    @foreach (var langItem in Model.Languages)
                                    {
                                        @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("type_ind_option_" + langItem.Key))))
                                    }   
                                    
                                >
                                Individual / Индивидуальная
                            </option>

                            <option value="4"

                                     @if (types.Contains(",4,")){

                                      @(" selected ")
                                  }
                              

                                    @foreach (var langItem in Model.Languages)
                                    {
                                        @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("type_group_option_" + langItem.Key))))
                                    } 
                                    
                               >
                                Group / Групповая
                            </option>
                        </select>
                    </label>
                </div>
            </div>
           
            <div class="row">
                <div class="col-sm-12 common-lang">
                    <label 
                            @foreach (var langItem in Model.Languages)
                            {
                                @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("category_title_" + langItem.Key))))
                            } 
                           >

                        <span>Excursion category / Категория экскурсии</span>
                        <select class="form-control" name="exc_cat">
                            <option value="2" 
                                    
                                  @if (types.Contains(",2,")){

                                      @(" selected ")
                                  }


                                    @foreach (var langItem in Model.Languages)
                                    {
                                        @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("category_sea_option_" + langItem.Key))))
                                    } 
                            >
                                Sea / Морская
                            </option>
                            <option value="1"

                                     @if (types.Contains(",1,")){

                                      @(" selected ")
                                  }
                                  
                                    @foreach (var langItem in Model.Languages)
                                    {
                                        @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("category_land_option_" + langItem.Key))))
                                    } 
                    
                                >
                                Land / Наземная
                            </option>
                            <option value="5"
                                    
                                     @if (types.Contains(",5,")){

                                      @(" selected ")
                                  }
                                   
                                    @foreach (var langItem in Model.Languages)
                                    {
                                        @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("category_air_option_" + langItem.Key))))
                                    } 
                    
                             >
                                Air / Воздушная
                            </option>
                        </select>
                    </label>
                </div>
            </div>
			
            <div class="row">
                <div class="col-sm-12 common-lang">

                    <label @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("guide_title_" + langItem.Key))))  }>

                        <span>Guide / Услуги гида</span>
                        <select class="form-control" name="guide">

                            <option value="2"
                                    @if (Model.Guide==2) {  @(" selected ")  }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("guide_inc_option_" + langItem.Key))))  }>
                                Incl / Входят
                            </option>

                            <option value="1"
                                    @if (Model.Guide == 1) {  @(" selected ")   }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("guide_escort_option_" + langItem.Key))))   }>
                                Escort / Escort
                            </option>

                            <option value="0"
                                    @if (Model.Guide == 0) {  @(" selected ")   }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("guide_no_option_" + langItem.Key))))   }>
                                No / No
                            </option>

                        </select>
                    </label>

                </div>
            </div>

            <div class="row">
                <div class="col-sm-12 common-lang">

                    <label @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("food_title_" + langItem.Key))))   }>
                    <span>Food / Food</span>

                        <select class="form-control" name="food">
                            <option value="1"
                                    @if (Model.Food == 1) {  @(" selected ")   }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("food_inc_option_" + langItem.Key))))   }>
                                Incl / Входят
                            </option>
                            <option value="0"
                                    @if (Model.Food == 0) {  @(" selected ")   }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("food_no_option_" + langItem.Key))))    }>
                                No / No
                            </option>
                        </select>
                    </label>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12 common-lang">

                    <label @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("fees_title_" + langItem.Key))))    }>
                        <span>entry fees / entry fees</span>
                        <select class="form-control" name="entryfees">

                            <option value="1"
                                    @if (Model.EntryFees == 1) {  @(" selected ")    }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("fees_inc_option_" + langItem.Key))))    }>
                                Incl / Входят
                            </option>
                            <option value="0"
                                    @if (Model.EntryFees == 0) {  @(" selected ")    }
                                    @foreach (var langItem in Model.Languages) { @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("fees_no_option_" + langItem.Key))))   }>
                                No / No
                            </option>
                        </select>
                    </label>
                </div>
            </div>
			
            <div class="row">
                <div class="col-sm-6 left-lang">
                    <label>
                        Excursion description
                        <textarea rows="12" class="form-control" name="exc_1_details">
						@foreach (var desc in Model.Descriptions)
                        {
                                if (desc.Key == 1)
                                {
                                    @desc.Value
                                }
                        }
						</textarea>
                    </label>
                </div>
                <div class="col-sm-6 right-lang">
                    @foreach (var desc in Model.Languages)
                    {
                        if (desc.Key != "1")
                        {
                               <span class="@desc.Key@("for-lang") for-lang right-lang">
                                   <span>@ExcursionStrings.Get("about_title_" + desc.Key)</span>
                                   <textarea rows="12" class="form-control" name="exc_@(desc.Key)_details">@(descriptions.ContainsKey(desc.Key) ? descriptions[desc.Key]:"")</textarea>
                               </span>
                        }
                    }
                </div>
            </div>
			
			
			<div class="row">
                <div class="col-sm-6 left-lang">
                    <label>
                        Route description
                        <textarea rows="12" class="form-control" name="exc_1_routes">
                            @foreach (var desc in Model.Routes)
                            {
                                if (desc.Key == 1)
                                {
                                    @desc.Value
                                }
                            }
                        </textarea>
                    </label>
                </div>
                <div class="col-sm-6 right-lang">

                    @foreach (var desc in Model.Languages)
                    {
                        if (desc.Key != "1")
                        {
                            <span class="@desc.Key@("for-lang") for-lang right-lang">
                                <span>@ExcursionStrings.Get("route_title_" + desc.Key)</span>
                                <textarea rows="12" class="form-control" name="exc_@(desc.Key)_routes">@(routes.ContainsKey(desc.Key) ? routes[desc.Key] : "")</textarea>
                            </span>
                        }
                    }
                </div>
            </div>

             <div class="row">
                <div class="col-sm-6 left-lang">
                    <label>
                        Cancellation/return policy
                        <textarea rows="12" class="form-control" name="exc_1_cancels">
                            @foreach (var desc in Model.Cancel)
                            {
                                if (desc.Key == 1)
                                {
                                    @desc.Value
                                }
                            }
                        </textarea>
                    </label>
                </div>
                <div class="col-sm-6 right-lang">

                    @foreach (var desc in Model.Languages)
                    {
                        if (desc.Key != "1")
                        {
                            <span class="@desc.Key@("for-lang") for-lang right-lang">
                                <span>@ExcursionStrings.Get("cancel_title_" + desc.Key)</span>
                                <textarea rows="12" class="form-control" name="exc_@(desc.Key)_cancels">@(cancels.ContainsKey(desc.Key) ? cancels[desc.Key] : "")</textarea>
                            </span>
                        }
                    }
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6 left-lang">
                    <label>
                        Special requirements
                        <textarea rows="12" class="form-control" name="exc_1_stuffs">
                            @foreach (var desc in Model.Stuffs)
                            {
                                if (desc.Key == 1)
                                {
                                    @desc.Value
                                }
                            }
                        </textarea>
                    </label>
                </div>
                <div class="col-sm-6 right-lang">

                    @foreach (var desc in Model.Languages)
                    {
                        if (desc.Key != "1")
                        {
                            <span class="@desc.Key@("for-lang") for-lang right-lang">
                                <span>@ExcursionStrings.Get("stuff_title_" + desc.Key)</span>
                                <textarea rows="12" class="form-control" name="exc_@(desc.Key)_stuffs">@(stuffs.ContainsKey(desc.Key) ? stuffs[desc.Key] : "")</textarea>
                            </span>
                        }
                    }
                </div>
            </div>
			
			
            <div class="row">
                <div class="col-sm-12 common-lang">
                    <label>
                        Route
                        <textarea rows="2" class="form-control" name="exc_en_route">@Model.Route</textarea>
                    </label>
                </div>
            </div>
<!--
            <div class="row">
                <div class="col-sm-12 common-lang">
                    <label 
                           @foreach (var langItem in Model.Languages)
                            {
                                @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("region_title_" + langItem.Key))))
                            } 
                           >
                        <span>Region / Регион</span>
                        <select class="form-control" name="exc_region" id="exc_region">
                            @{
                                //выбранный регион
                                foreach (var row in Model.Regions)
                                {
                                        <option @( Model.Region.ToString() == row.Key ? "selected":"") value="@row.Key">@row.Value</option>
                                }
                            }

                            <option value="2">-new region-</option>
                        </select>

                    </label>
                    <input type="text" placeholder="type region name" style="display:none" class="form-control" name="exc_region_name" value="">
                </div>
            </div>
        -->
            <div class="row">
            @if (Model.OldPrices.Length > 0)
              {
                    <div class="old_prices">

                        <div class="col-sm-12" style="margin-bottom:20px">
                            <center>
                                <label 
                                        @foreach (var langItem in Model.Languages)
                                        {
                                            @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("old_price_title_" + langItem.Key))))
                                        } 
                                       >
                                    <span>Inserted Price / Внесенные цены</span>
                                </label>
                            </center>
                        </div>

                        <div class="old_price_header row ind">
                            <div class="col-sm-2" style="border-bottom: 1px dotted #000;">
                                Dates
                            </div>
                            <div class="col-sm-2" style="border-bottom: 1px dotted #000;">
                                Type
                            </div>
                            <div class="col-sm-2" style="border-bottom: 1px dotted #000;">
                                Price
                            </div>
                            <div class="col-sm-2" style="border-bottom: 1px dotted #000;">
                               <nobr> Language / Region </nobr>
                            </div>
                            <div class="col-sm-2" style="border-bottom: 1px dotted #000;">
                                Group
                            </div>
                            <div class="col-sm-1" style="border-bottom: 1px dotted #000;">
                                Weekdays
                            </div>
                            <div class="col-sm-1" style="border-bottom: 1px dotted #000;">
                                Remove
                            </div>
                        </div>
						


                        @foreach (var priceItem in Model.OldPrices)
                        {
                            <div class="old_price_row row ind">
                                <div class="col-sm-2">
                                    @priceItem.Value.Dates
                                </div>
                                <div class="col-sm-2">
                                    @priceItem.Value.Type
                                </div>
                                <div class="col-sm-2">
                                    Market:  @priceItem.Value.MarketSumm <br>
                                    Published:  @priceItem.Value.Summ <br>
                                    Natto:   @priceItem.Value.NettoSumm <br>
                                </div>
                                <div class="col-sm-2">
                                    <nobr>@priceItem.Value.Lang / @priceItem.Value.Region</nobr>
                                </div>
                                <div class="col-sm-2">
                                    @priceItem.Value.Group
                                </div>
                                <div class="col-sm-1">
                                    @priceItem.Value.Weekdays
                                </div>
                                <div class="col-sm-1">
                                    <a class="remove-price" href="#" data-priceid="@priceItem.Key">Remove</a>
                                </div>
                            </div>
                        }
                    </div>
              }

                <div class="prices">
                        <div class="col-sm-12" style="margin-bottom:20px; border-bottom: 1px dotted #000;">
                            <center>
                                <label 
                                        @foreach (var langItem in Model.Languages)
                                        {
                                            @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("new_price_title_" + langItem.Key))))
                                        } 
                                       >
                                    <span>New Prices / Новые цены</span>
                                </label>
                            </center>
                        </div>

                        <div class="price_row ind procent">
                            <div class="col-sm-2">
                                <label data-ru="Price type">
                                    <span>Price type</span>
                                    <select onchange="changeParentClass(this)" class="form-control" name="group_type[]">
                                        <option selected data-parentclass="ind" value="2" data-ru="Ind">
                                            Ind
                                        </option>
                                        <option data-parentclass="group" value="1" data-ru="Group">
                                            Group
                                        </option>
                                    </select>
                                </label>
                            </div>

                            <span class="for_group">
                                <div class="col-sm-2">
                                    <label data-ru="Adult">
                                        <span>Adult</span>
                                        <input type="text" class="form-control intval" name="ad_price[]" value="">
                                    </label>
                                </div>
                                <div class="col-sm-2">
                                    <label data-ru="Child">
                                        <span>Child</span>
                                        <input type="text" class="form-control intval" name="ch_price[]" value="">
                                    </label>
                                </div>
                                <div class="col-sm-2">
                                    <label data-ru="Infant">
                                        <span>Infant</span>
                                        <input type="text" class="form-control intval" name="inf_price[]" value="">
                                    </label>
                                </div>
                            </span>

                            <span class="for_ind">
                                <div class="col-sm-6">
                                    <label data-ru="Exc price (all participants)">
                                        <span>Exc price (all participants)</span>
                                        <input type="text" class="form-control intval" name='total[]' value="">
                                    </label>
                                </div>
                            </span>

                            <div class="col-sm-2">
                                <label data-ru="Currency">
                                    <span>Currency</span>
                                    <select class="form-control" name="currency[]">
                                        <option value="8" data-ru="eur">
                                            eur
                                        </option>
                                        <option value="5" data-ru="usd">
                                            usd
                                        </option>

                                    </select>
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <label data-ru="Exc language">
                                    <span>Exc language</span>
                                    <select class="form-control" name="pr_lang[]">
                                        <option value="-2147483647" data-ru="Any">
                                            Any
                                        </option>
                                        @{
                                            foreach (var row in Model.Languages)
                                            {
                                                <option value="@row.Key">@row.Value</option>
                                            }
                                        }
                                    </select>
                                </label>
                            </div>
                            <span style="position:absolute; cursor:pointer; display:none" onclick="removeParent(this)" class="parent_remove"> X </span>

                            <div class="col-sm-2">
                                <label data-ru="Comission type">
                                    <span>Comission type</span>
                                    <select onchange="changeParentCommissionClass(this)" class="form-control" name="comission_type[]">
                                        <option selected data-parentclass="procent" value="1" data-ru="comission %">
                                            comission %
                                        </option>
                                        <option data-parentclass="netto" value="2" data-ru="brutto/netto">
                                            brutto/netto
                                        </option>
                                    </select>
                                </label>
                            </div>

                            <span class="for_netto">
                                <span class="for_group">
                                    <div class="col-sm-2">
                                        <label data-ru="Adult / NETTO ">
                                            <span>Adult / NETTO </span>
                                            <input type="text" class="form-control intval" name="netto_ad_price[]" value="">
                                        </label>
                                    </div>
                                    <div class="col-sm-2">
                                        <label data-ru="Child / NETTO ">
                                            <span>Child / NETTO </span>
                                            <input type="text" class="form-control intval" name="netto_ch_price[]" value="">
                                        </label>
                                    </div>
                                    <div class="col-sm-2">
                                        <label data-ru="Infant / NETTO ">
                                            <span>Infant / NETTO </span>
                                            <input type="text" class="form-control intval" name="netto_inf_price[]" value="">
                                        </label>
                                    </div>

                                </span>

                                <span class="for_ind">
                                    <div class="col-sm-6">
                                        <label data-ru="Exc price (all participants) / NETTO ">
                                            <span>Exc price (all participants) / NETTO </span>
                                            <input type="text" class="form-control intval" name='netto_total[]' value="">
                                        </label>
                                    </div>

                                </span>
                                <div class="col-sm-4">&nbsp;<br>&nbsp;<br>&nbsp;</div>
                            </span>

                            <span class="for_procent">

                                <div class="col-sm-6">
                                    <label data-ru="comission %">
                                        <span>comission %</span>
                                        <input style="width:404px" placeholder="10" type="text" class="form-control" name="price_comis[]" value="">
                                    </label>
                                </div>
                                <div class="col-sm-4">&nbsp;<br>&nbsp;<br>&nbsp;</div>

                            </span>
                            <div class="col-sm-2">
                                <label data-ru="Valid from">
                                    <span>Valid from</span>
                                    <input type="text" class="form-control adate minDate" name="adate[]" value="">
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <label data-ru="Valid till">
                                    <span>Valid till</span>
                                    <input type="text" class="form-control edate maxDate" name="edate[]" value="">
                                </label>
                            </div>

                            <div class="col-sm-2">
                                <label data-ru="Group from (pax)">
                                    <span>Group from (pax)</span>
                                    <input type="text" class="form-control intval" name="group_from[]" value="">
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <label data-ru="Group till (pax)">
                                    <span>Group till (pax)</span>
                                    <input type="text" class="form-control intval" name="group_to[]" value="">
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <label data-ru="Sell date from">
                                    <span>Sell date from</span>
                                    <input type="text" class="form-control sdateFrom minDate" name="sdate_from[]" value="">
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <label data-ru="Sell date till">
                                    <span>Sell date till</span>
                                    <input type="text" class="form-control sdateTo maxDate" name="sdate_to[]" value="">
                                </label>
                            </div>
				<div class="col-sm-2">
                    <label 
                           @foreach (var langItem in Model.Languages)
                            {
                                @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("region_title_" + langItem.Key))))
                            } 
                           >
                        <span>Region / Регион</span>
                        <select class="form-control" name="price_region[]" >
						   
                            @{
                                //выбранный регион
                                foreach (var row in Model.Regions)
                                {
                                       <option value="@row.Key">@row.Value</option>

                                    
                                }
                            }

                        
                        </select>

                    </label>
                   
                </div>
							
                            <div class="col-sm-6">
                                <label data-ru="Excursion's weekdays">
                                    <span>Excursion's weekdays (all days by default)</span><br>
                                    <div class="btn-group weekdays" data-toggle="buttons">
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="1">Mo
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="2">Tu
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="3">We
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="4">Th
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="5">Fr
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="6">Sa
                                        </label>
                                        <label class="btn btn-default active">
                                            <input checked="checked" type="checkbox" value="7">Su
                                        </label>
                                    </div>
                                    <input type="hidden" name="days[]" value="1111111">
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <center><button class="btn btn-primary" type="button" value="" onclick="addPriceRow()">Add more price row</button></center>
                        </div>
                    </div>
                </div>

            <div class="row">
                <div class="col-sm-12 common-lang">
                    <label data-ru="video url"
                           data-fr="video url"
                           data-de="video url">
                        <span>video url</span>

                        <input placeholder="https://..." type="text" id="exc_video" class="form-control" name="exc_video" value="@Model.VideoUrl">
                    </label>
                </div>
            </div>
        </form>
        @if (Model.OldPhotos.Length > 0)
        {
            <div class="row">
            
                <div class="photo_row ind col-sm-12">
                    @foreach (var photoItem in Model.OldPhotos)
                    {
                        <div class="photo-item" style="width:300px;float:left">
                            <img src="@Url.ApiActionLink("editimage", "excursion")/@(photoItem.Key)?i=@(photoItem.Value ? "1" : "0")&w=290&h=150" />
                       
                            <a class="remove-image" href="#" data-istemp="@photoItem.Value" data-photoid="@photoItem.Key">Remove</a>
                        </div>
                    }
                </div>
            </div>
        }
        <div class="row">
            <div class="col-sm-12 common-lang">
                <label
                         @foreach (var langItem in Model.Languages)
                         {
                                 @(new HtmlString(string.Format(" data-{0}=\"{1}\" ", @langItem.Key, @ExcursionStrings.Get("photos_title_" + langItem.Key))))
                         } 
                       >
                    <span>Photos, min 2000px width / Фото, ширина минимум 2000px</span>

                </label>
                <!-- Change /upload-target to your upload address -->
            <form id="myAwesomeDropzone" action="@Url.ApiActionLink("uploadimage", "partnerexcursion")" class="dropzone"></form>
            <script>
                var priceRow = "";
                jQuery(function (e) {

                    $('#exc_en_name').keyup(function () {
                        $('#exc_en_name_copy').val($('#exc_en_name').val());
                    });

                    $('#exc_en_name_copy').val($('#exc_en_name').val());

                    $('.remove-image').click(function () {
                        //ajax

                        $.ajax({
                            type: 'GET',
                            url: '@Url.ApiActionLink("deletephoto", "partnerexcursion")',
                            data: "id=" + $(this).attr('data-photoid') + "&ismain="+$(this).attr('data-istemp') ,
                            dataType: 'html'
                        });

                        $(this).parent().fadeOut(function () {

                                                    $(this).remove();

                                                    if ($('.photo-item').length == 0)
                                                        $('.photo_row').parent().remove();
                                                });

                        return false;
                    });


                    $('.remove-price').click(function () {
                        //ajax

                        $.ajax({
                            type: 'GET',
                            url: '@Url.ApiActionLink("deleteprice", "partnerexcursion")',
                            data: "id=" + $(this).attr('data-priceid'),
                            dataType: 'html'
                        });


                        $(this).parent().parent().fadeOut(function () {

                            $(this).remove();

                            if ($('.old_price_row').length == 0)
                                $('.old_prices').remove();
                        });
                        
                        return false;
                    });


                    $('.intval').change(function () {
                            $(this).val(parseInt($(this).val()) || 0);
                        });

                    priceRow =  '<div class="price_row col-sm-12 ind procent">' + $('.price_row').first().html() + '</div>';

                    var dates = jQuery('.adate, .edate').datepicker(
                    {
                        onSelect:
                               function (selectedDate) {
                                   var $this = $(this),
                                       option = $this.hasClass("minDate") ? "minDate" : "maxDate",
                                       adjust = $this.hasClass("maxDate") ? 1 : -1,
                                       base_date = new Date(selectedDate),
                                       new_date = new Date();
                                   new_date.setDate(base_date.getDate());
                                   dates.not(this).datepicker("option", option, new_date);
                               },
                        dateFormat: "yy-mm-dd"
                    });

                   var dates2 = jQuery('.sdateFrom, .sdateTo').datepicker(
                   {
                       onSelect:
                              function (selectedDate) {
                                  var $this = $(this),
                                      option = $this.hasClass("minDate") ? "minDate" : "maxDate",
                                      adjust = $this.hasClass("maxDate") ? 1 : -1,
                                      base_date = new Date(selectedDate),
                                      new_date = new Date();
                                  new_date.setDate(base_date.getDate());
                                  dates2.not(this).datepicker("option", option, new_date);
                              },
                       dateFormat: "yy-mm-dd"
                   });

                  
                });

                var addPriceRow = function () {
                   
                    $(priceRow).insertAfter($('.price_row').last());

                    $('.parent_remove').show();
                    $('.parent_remove').first().hide();

                    setTimeout(function () {
                        var dates = jQuery('.adate, .edate', $('.price_row').last()).datepicker(
                        {
                            onSelect:
                                   function (selectedDate) {
                                       var $this = $(this),
                                           option = $this.hasClass("minDate") ? "minDate" : "maxDate",
                                           adjust = $this.hasClass("maxDate") ? 1 : -1,
                                           base_date = new Date(selectedDate),
                                           new_date = new Date();
                                       new_date.setDate(base_date.getDate());
                                       dates.not(this).datepicker("option", option, new_date);
                                   },
                            dateFormat: "yy-mm-dd"
                        });

                        var dates2 = jQuery('.sdateFrom, .sdateTo', $('.price_row').last()).datepicker(
                        {
                            onSelect:
                                   function (selectedDate) {
                                       var $this = $(this),
                                           option = $this.hasClass("minDate") ? "minDate" : "maxDate",
                                           adjust = $this.hasClass("maxDate") ? 1 : -1,
                                           base_date = new Date(selectedDate),
                                           new_date = new Date();
                                       new_date.setDate(base_date.getDate());
                                       dates2.not(this).datepicker("option", option, new_date);
                                   },
                            dateFormat: "yy-mm-dd"
                        });

                        $(".weekdays", $('.price_row').last()).change(function (e) {

                            var days = '';

                            $("input", $(this)).each(
                                function () {
                                    days += (0 + $(this).is(':checked'));
                                });

                            $(this).next().val(days);

                        });

                    }, 1000);
                }

                var minImageWidth = 2000;
                var fileNames = Array();

                Dropzone.options.myAwesomeDropzone = {
                        paramName: "file", // The name that will be used to transfer the file
                        maxFilesize: 3, // MB
                        addRemoveLinks: true,
                        removedfile: function (file) {

                            var name = fileNames[file.name];

                            if(typeof(name)!='undefined')
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.ApiActionLink("removeimage", "partnerexcursion")',
                                    data: "id=" + name,
                                    dataType: 'html'
                                });

                            fileNames[file.name] = false;

                            var _ref;
                            return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
                        },

                        success: function (file, response) {

                            fileNames[file.name] = response;
                        },

                        init: function () {
                            // Register for the thumbnail callback.
                            // When the thumbnail is created the image dimensions are set.
                            this.on("thumbnail", function (file) {

                                if (file.width < minImageWidth) {
                                    file.rejectDimensions()
                                }
                                else {
                                    file.acceptDimensions();
                                }
                            });
                        },

                        accept: function (file, done) {
                            if (file.type.indexOf('image/jpeg') == -1)
                            {
                                done("Only jpeg images, please");
                            }
                            else if (file.size > 3 * 1024 * 1024)//check size
                            {
                                done("Unfortunately, the file is very large. Try to upload a file less than 1MB");
                            }
                            else {
                                file.acceptDimensions = function () { done() };
                                file.rejectDimensions = function () { done("Invalid dimension."); };
                            }
                        }
                    };
                </script>
            </div>
        </div>
    </div>

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
    <script>
        var removeParent = function (el) {

            $(el).parent().remove();
        }
        var sendPhotos = function () {

            var res = "";

            for (var key in fileNames) {

                if (fileNames[key] != false)
                    res += "&photos[]=" + fileNames[key];
            }

            return res;
        }
        var submitForm = function () {
            var info = $('#edit_excursion').serialize();
            var patt1 = /%5B/i;
            var patt2 = /%5D/i;

            var res = info.replace(patt1, "[").replace(patt2, "]");
            console.log(res);

            $.post(      '@Url.ApiActionLink("editexcursion", "partnerexcursion")',
                        res
                        + "&lang=" + $('input[name=opt_lang]:checked').val()
                        + sendPhotos(), 
                        function () {
                            $('.wait').hide();
                            alert('Changes to excursion has been saved. Please note that some changes (i.e. new pictures) require check by EXGO manager and will appear in booking system after approval.');
                            location.href = '@Url.Action("editlist","partnerexcursion")';
                            //$('.wait').hide();
                        }
                    );

        };
        </script>



        <div class="col-sm-12 common-lang-btn">
            
            <button class="btn btn-primary" type="submit" value="" onclick=" $('.wait',this).show(); submitForm()">
                Save excursion
                <span class="wait" style='font-size:60%; display:none'><span class="glyphicon glyphicon-refresh spinning"></span> please wait</span>
            </button>

			<a href="@Url.Action("editlist","partnerexcursion")"><button class="btn btn-primary" type="submit" value="" onclick="">Cancel</button></a>

        </div>

</div>
